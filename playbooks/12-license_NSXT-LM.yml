##
##    Project: VMware NSXT SDDC Design POC Lab
##    Authors: VirtualSachIN
##    Filename: playbooks/license_NSXT-LM.yml
##
---
- hosts: localhost
  vars_files:
    - ../licenses.yml
    - ../answerfile.yml 
  name: license_NSXT-LM.yml
  vars:
    - LOCAL_LicenseFile: ../licenses.yml
  tasks:
    - name: license_NSXT-LM_Playbook
      ansible.builtin.debug:
        msg: "Starting playbook: {{ ansible_play_name }}"

    - name: DEBUG -- Display Target Variables (Pause)
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Name}} ===========================

                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                             Deploy.Product.NSXT.LocalManager: {{ Deploy.Product.NSXT.LocalManager }}
             NSXT.Components.LocalManager.FQDN: {{ NSXT.Components.LocalManager.FQDN }}

                                         License File: {{ LOCAL_LicenseFile }}

                                               NSX-T Deployed
                                               ==============
                                               Vendor: {{ Deploy.Software.NSXT.Vendor }}
                                              Product: {{ Deploy.Software.NSXT.Product }}
                                              Version: {{ Deploy.Software.NSXT.Version }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.Product.NSXT.LocalManager == true


###
### GOAL: If License file does not exist, then skip all licensing, and leave the components in Evauation state.
###

    - name: Check for existance of license file
      ansible.builtin.stat:
        path: "{{ LOCAL_LicenseFile }}"
        get_checksum: no
      register: stat_results

    - name: Assume file does not exist, so set flag to skip licensing products
      ansible.builtin.set_fact:
        LicenseProducts: False

    - name: If License file does exist and is a regular file, then set flag to license products
      ansible.builtin.set_fact:
        LicenseProducts: True
      when:
        - stat_results.stat.exists == True
        - stat_results.stat.isreg == True

    - name: If not licensing products, notify user
      ansible.builtin.pause:
        seconds: 20
        prompt: |
          =========================================================================
          =========================== Licensing Notice  ===========================
          =========================================================================

             The following licensing file does not appear to exist:
                                 {{ LOCAL_LicenseFile }}

             For that reason, the following products will NOT be licensed, and
             will operate with their respective default license(s):

                                 NSX-T

          =========================================================================
      when:
        - LicenseProducts != True

    - name: If we are licensing products, read in license information
      ansible.builtin.include_vars:
        file: "{{ LOCAL_LicenseFile }}"
      when: LicenseProducts == True


##
## License NSX-T
##
    - name: Install All NSX-T Licenses
      nsxt_licenses:
        hostname: "{{ NSXT.Components.LocalManager.FQDN }}"
        username: "{{ NSXT.Credential.admin.Name }}"
        password: "{{ NSXT.Credential.admin.Password }}"
        validate_certs: no
        license_key: "{{ item.KeyCode }}"
        state: present
      loop: "{{ License.VMware.NSXT.Licenses | default([]) }}"
      ignore_errors: yes                                                             # If license in already in use or not applicable, it will result in 'failure', so need to ensure we continue by ignoring the error
      no_log: true
      when:
        - Deploy.Product.NSXT.LocalManager == true
        - Deploy.Software.NSXT.Version is match(item.Version)
        - LicenseProducts == True
