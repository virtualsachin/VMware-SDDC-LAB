##
##    Project: VMware NSXT SDDC Design POC Lab
##    Authors: VirtualSachIN
##    Filename: playbooks/createVds.yml
##
---
- hosts: localhost
  gather_facts: False
  vars_files:
    - ../answerfile.yml 
  name: createVds.yml
  tasks:
    - name: createVds_Playbook
      ansible.builtin.debug:
        msg: "Starting playbook: {{ ansible_play_name }}"

    - name: DEBUG -- Display Target Variables (Pause)
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Name}} ===========================

                                      Ansible Playbook: {{ ansible_play_name }}

                                     Target.Deployment: {{ Target.Deployment }}

                                   Nested_vCenter.FQDN: {{ Nested_vCenter.FQDN }}
                                   Nested_vCenter.User: {{ Nested_vCenter.User }}
                               Nested_vCenter.Password: {{ Nested_vCenter.Password }}
                             Nested_vCenter.DataCenter: {{ Nested_vCenter.DataCenter }}

                                          vSwitch.Name: {{ Nested_vCenter.Networking.vSwitchA.Name }}
                                    vSwitch.Config.MTU: {{ Nested_vCenter.Networking.vSwitchA.Config.MTU }}
                        vSwitch.Config.NumberOfUplinks: {{ Nested_vCenter.Networking.vSwitchA.Config.NumberOfUplinks }}
                            LinkDiscoveryProtocol.Type: {{ Nested_vCenter.Networking.vSwitchA.Config.LinkDiscoveryProtocol.Type }}
                       LinkDiscoveryProtocol.Operation: {{ Nested_vCenter.Networking.vSwitchA.Config.LinkDiscoveryProtocol.Operation }}

                                          vSwitch.Name: {{ Nested_vCenter.Networking.vSwitchB.Name }}
                                    vSwitch.Config.MTU: {{ Nested_vCenter.Networking.vSwitchB.Config.MTU }}
                        vSwitch.Config.NumberOfUplinks: {{ Nested_vCenter.Networking.vSwitchB.Config.NumberOfUplinks }}
                            LinkDiscoveryProtocol.Type: {{ Nested_vCenter.Networking.vSwitchB.Config.LinkDiscoveryProtocol.Type }}
                       LinkDiscoveryProtocol.Operation: {{ Nested_vCenter.Networking.vSwitchB.Config.LinkDiscoveryProtocol.Operation }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
############################################################################################################
#                                ESXi Host networking deployment for Cluster-A                             #
############################################################################################################
    - name: Create distributed switch in the nested vCenter for Cluster-A
      community.vmware.vmware_dvswitch:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        datacenter_name: "{{ Nested_vCenter.DataCenter }}"
        validate_certs: false
        switch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        switch_version: "{% if Deploy.Software.vCenter.vSwitch == Deploy.Software.ESXi.vSwitch %}{{ omit }}{% else %}{{ Deploy.Software.ESXi.vSwitch }}{% endif %}"
        mtu: "{{ Nested_vCenter.Networking.vSwitchA.Config.MTU }}"
        uplink_quantity: "{{ Nested_vCenter.Networking.vSwitchA.Config.NumberOfUplinks }}"
        discovery_proto: "{{ Nested_vCenter.Networking.vSwitchA.Config.LinkDiscoveryProtocol.Type }}"
        discovery_operation: "{{ Nested_vCenter.Networking.vSwitchA.Config.LinkDiscoveryProtocol.Operation }}"
        state: present
        
    - name: Create Management port group in the nested vCenter for Cluster-A
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.Management.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.Management.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vMotion port group in the nested vCenter for Cluster-A
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.vMotion.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.vMotion.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vSAN port group in the nested vCenter for Cluster-A
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.vSAN.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.vSAN.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create IP Storage port group for NFS in the nested vCenter for Cluster-A
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.IPStorage.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchA.PortGroup.IPStorage.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create NSX EDGE Uplink1 port group on vCenter DVS if Target Deployment is on vCenter
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink1.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchE.Name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present
      when: 
        - Target.Deployment == "vCenter"

    - name: Create NSX EDGE Uplink2 port group on vCenter DVS if Target Deployment is on vCenter
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink2.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchE.Name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present
      when: 
        - Target.Deployment == "vCenter"

    - name: Create NSX EDGE Uplink1 port group on vCenter DVS if Target Deployment is on Host
      community.vmware.vmware_portgroup:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        esxi_hostname: "{{ Target.FQDN }}"
        switch_name: "{{ Target.vSwitch }}"
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink1.Name }}"
        vlan_id: "{{ Target.PortGroup.Trunk.VLAN }}"
        security:
          promiscuous_mode: false
          forged_transmits: false
          mac_changes: false
      when: 
        - Target.Deployment == "Host"

    - name: Create NSX EDGE Uplink2 port group on vCenter DVS if Target Deployment is on Host
      community.vmware.vmware_portgroup:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        esxi_hostname: "{{ Target.FQDN }}"
        switch_name: "{{ Target.vSwitch }}"
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink2.Name }}"
        vlan_id: "{{ Target.PortGroup.Trunk.VLAN }}"
        security:
          promiscuous_mode: false
          forged_transmits: false
          mac_changes: false
      when: 
        - Target.Deployment == "Host"

    - name: Migrate uplinks to the VDS for Compute-A Hosts
      community.vmware.vmware_dvs_host:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        vmnics:
          - vmnic1
          - vmnic2
        state: present
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Migrate vmk0 to the VDS for Nested ESXi Compute-A Hosts
      community.vmware.vmware_migrate_vmk:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        device: 'vmk0'
        current_switch_name: 'vSwitch0'
        current_portgroup_name: 'Management Network'
        migrate_switch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        migrate_portgroup_name: "{{ item.value.vmk.vmk0.PortGroup }}"
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Create vmk1 for vMotion for Nested ESXi Compute-A Hosts
      community.vmware.vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        portgroup_name: "{{ item.value.vmk.vmk1.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        enable_vmotion: true
        mtu: "{{ item.value.vmk.vmk1.MTU }}"
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk1.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk1.Address.IPv4.Address + '/' + item.value.vmk.vmk1.Address.IPv4.Prefix) | ipaddr('netmask') }}"
          tcpip_stack: "{{ item.value.vmk.vmk1.Stack }}"
        state: present
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Configure vMotion TCP/IP stack gateway address on Nested ESXi Compute-A Hosts
      community.vmware.vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip route ipv4 add --netstack vmotion --network default --gateway {{ item.value.vmk.vmk1.Address.IPv4.Gateway }}"
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when:
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
    - name: Configure vMotion TCP/IP stack gateway address on Nested ESXi Compute-A Hosts
      community.vmware.vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip route ipv4 add --netstack vmotion --network default --gateway {{ item.value.vmk.vmk1.Address.IPv4.Gateway }}"
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when:
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
        - Target.Deployment == "vCenter"

    - name: Create vmk2 for vSAN Nested ESXi Compute-A Hosts
      community.vmware.vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        portgroup_name: "{{ item.value.vmk.vmk2.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        enable_vsan: true
        mtu: "{{ item.value.vmk.vmk2.MTU }}"
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk2.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk2.Address.IPv4.Address + '/' + item.value.vmk.vmk2.Address.IPv4.Prefix) | ipaddr('netmask') }}"
          tcpip_stack: "{{ item.value.vmk.vmk2.Stack }}"
        state: present
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
      
    - name: Create vmk3 for IP Storage (NFS) Nested ESXi Compute-A Hosts
      community.vmware.vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        portgroup_name: "{{ item.value.vmk.vmk3.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitchA.Name }}"
        mtu: "{{ item.value.vmk.vmk3.MTU }}"
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk3.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk3.Address.IPv4.Address + '/' + item.value.vmk.vmk3.Address.IPv4.Prefix) | ipaddr('netmask') }}"
          tcpip_stack: "{{ item.value.vmk.vmk3.Stack }}"
        state: present
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
      
    - name: Remove the standard switch from the ESXi hosts for Cluster-A
      community.vmware.vmware_vswitch:
        hostname: '{{ item.value.FQDN }}'
        username: '{{ item.value.User }}'
        password: '{{ item.value.Password }}'
        validate_certs: false
        switch: 'vSwitch0'
        state: absent
      loop: "{{ Nested_ESXi.HostCA | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
############################################################################################################
#                                ESXi Host networking deployment for Cluster-B                             #
############################################################################################################
    - name: Create distributed switch in the nested vCenter for Cluster-B
      community.vmware.vmware_dvswitch:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        datacenter_name: "{{ Nested_vCenter.DataCenter }}"
        validate_certs: false
        switch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        switch_version: "{% if Deploy.Software.vCenter.vSwitch == Deploy.Software.ESXi.vSwitch %}{{ omit }}{% else %}{{ Deploy.Software.ESXi.vSwitch }}{% endif %}"
        mtu: "{{ Nested_vCenter.Networking.vSwitchB.Config.MTU }}"
        uplink_quantity: "{{ Nested_vCenter.Networking.vSwitchB.Config.NumberOfUplinks }}"
        discovery_proto: "{{ Nested_vCenter.Networking.vSwitchB.Config.LinkDiscoveryProtocol.Type }}"
        discovery_operation: "{{ Nested_vCenter.Networking.vSwitchB.Config.LinkDiscoveryProtocol.Operation }}"
        state: present
        
    - name: Create Management port group in the nested vCenter for Cluster-B
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.Management.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.Management.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vMotion port group in the nested vCenter for Cluster-B
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.vMotion.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.vMotion.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vSAN port group in the nested vCenter for Cluster-B
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.vSAN.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.vSAN.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create IP Storage port group for NFS in the nested vCenter for Cluster-B
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.IPStorage.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitchB.PortGroup.IPStorage.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create NSX EDGE Uplink1 port group on vCenter DVS if Target Deployment is on vCenter
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink1.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchE.Name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present
      when: 
        - Target.Deployment == "vCenter"

    - name: Create NSX EDGE Uplink2 port group on vCenter DVS if Target Deployment is on vCenter
      community.vmware.vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink2.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchE.Name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present
      when: 
        - Target.Deployment == "vCenter"

    - name: Create NSX EDGE Uplink1 port group on vCenter DVS if Target Deployment is on Host
      community.vmware.vmware_portgroup:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        esxi_hostname: "{{ Target.FQDN }}"
        switch_name: "{{ Target.vSwitch }}"
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink1.Name }}"
        vlan_id: "{{ Target.PortGroup.Trunk.VLAN }}"
        security:
          promiscuous_mode: false
          forged_transmits: false
          mac_changes: false
      when: 
        - Target.Deployment == "Host"

    - name: Create NSX EDGE Uplink2 port group on vCenter DVS if Target Deployment is on Host
      community.vmware.vmware_portgroup:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        esxi_hostname: "{{ Target.FQDN }}"
        switch_name: "{{ Target.vSwitch }}"
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitchE.PortGroup.NSXEdgeUplink2.Name }}"
        vlan_id: "{{ Target.PortGroup.Trunk.VLAN }}"
        security:
          promiscuous_mode: false
          forged_transmits: false
          mac_changes: false
      when: 
        - Target.Deployment == "Host"

    - name: Migrate uplinks to the VDS for Compute-B Hosts
      community.vmware.vmware_dvs_host:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        vmnics:
          - vmnic1
          - vmnic2
        state: present
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Migrate vmk0 to the VDS for Nested ESXi Compute-B Hosts
      community.vmware.vmware_migrate_vmk:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        device: 'vmk0'
        current_switch_name: 'vSwitch0'
        current_portgroup_name: 'Management Network'
        migrate_switch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        migrate_portgroup_name: "{{ item.value.vmk.vmk0.PortGroup }}"
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Create vmk1 for vMotion for Nested ESXi Compute-B Hosts
      community.vmware.vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        portgroup_name: "{{ item.value.vmk.vmk1.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        enable_vmotion: true
        mtu: "{{ item.value.vmk.vmk1.MTU }}"
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk1.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk1.Address.IPv4.Address + '/' + item.value.vmk.vmk1.Address.IPv4.Prefix) | ipaddr('netmask') }}"
          tcpip_stack: "{{ item.value.vmk.vmk1.Stack }}"
        state: present
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Configure vMotion TCP/IP stack gateway address on Nested ESXi Compute-B Hosts
      community.vmware.vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip route ipv4 add --netstack vmotion --network default --gateway {{ item.value.vmk.vmk1.Address.IPv4.Gateway }}"
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when:
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
    - name: Configure vMotion TCP/IP stack gateway address on Nested ESXi Compute-A Hosts
      community.vmware.vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip route ipv4 add --netstack vmotion --network default --gateway {{ item.value.vmk.vmk1.Address.IPv4.Gateway }}"
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when:
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
        - Target.Deployment == "vCenter"

    - name: Create vmk2 for vSAN Nested ESXi Compute-B Hosts
      community.vmware.vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        portgroup_name: "{{ item.value.vmk.vmk2.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        enable_vsan: true
        mtu: "{{ item.value.vmk.vmk2.MTU }}"
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk2.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk2.Address.IPv4.Address + '/' + item.value.vmk.vmk2.Address.IPv4.Prefix) | ipaddr('netmask') }}"
          tcpip_stack: "{{ item.value.vmk.vmk2.Stack }}"
        state: present
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
      
    - name: Create vmk3 for IP Storage (NFS) Nested ESXi Compute-B Hosts
      community.vmware.vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        portgroup_name: "{{ item.value.vmk.vmk3.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitchB.Name }}"
        mtu: "{{ item.value.vmk.vmk3.MTU }}"
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk3.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk3.Address.IPv4.Address + '/' + item.value.vmk.vmk3.Address.IPv4.Prefix) | ipaddr('netmask') }}"
          tcpip_stack: "{{ item.value.vmk.vmk3.Stack }}"
        state: present
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
      
    - name: Remove the standard switch from the ESXi hosts for Cluster-B
      community.vmware.vmware_vswitch:
        hostname: '{{ item.value.FQDN }}'
        username: '{{ item.value.User }}'
        password: '{{ item.value.Password }}'
        validate_certs: false
        switch: 'vSwitch0'
        state: absent
      loop: "{{ Nested_ESXi.HostCB | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

